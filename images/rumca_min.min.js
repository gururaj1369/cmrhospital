var RumcaJS=function(f,b){function d(k,e,j){var h=k[e];k[e]=k[j],k[j]=h}function c(){var l=b.find(".chart__label-y"),j=b.find(".bar__container"),a=j.length,o={axisY:[],bars:[]};if(a&&l.length===a){for(var p=0;a>p;p++){var m=$(l[p]).text(),k=$(j[p]).data("value");o.barsLength=a,o.axisY.push(m),o.bars.push(k)}return o}return 0}function g(l,h,k){var j=$(window),m=function(o,i){var p=j.scrollTop(),q=j.scrollTop()+j.height()-i;o.each(function(){var w=$(this),n=w.offset().top,u=n+w.height(),x=n>=p&&q>=n,v=p>=n&&u>=q,y=u>=p&&q>=u,e=x||y||v;k?w.toggleClass("visible",e):w.addClass("visible",e)})};m(l,h),j.scroll(function(){m(l,h)})}this.elem=$(b),this.selector=b.selector,this.options=f,this.init=function(h){var e='<div class="chart--top"><div class="chart__axis-y"></div><div class="chart__box chart--horizontal"> <div class="chart__bars"></div></div></div><div class="chart__axis-x"></div>';this.elem.addClass("chart__container"),this.elem.html(e),this.appendAll(h.data),this.selectMax(),this.selectMin(),h.animation?g(this.elem,h.animationOffset,h.animationRepeat):this.elem.addClass("visible"),h.showValues&&this.elem.addClass("show-values"),h.showArrows&&this.elem.addClass("show-arrows"),h.showHorizontalLines&&this.elem.addClass("show-horizontal-lines"),h.labelsAboveBars&&this.elem.addClass("labels-above-bars")},this.prependItem=function(h,e){this.prependAxisY([h]),this.prependBars([e])},this.prependAxisX=function(k){var e=this.elem.find(".chart__axis-x");k.forEach(function(l){var a='<span class="chart__label-x">'+l+"</span>";e.prepend(a)});var j=e.find("span"),h=j.length;j.width(100/h+"%")},this.prependBars=function(h){var e=this.elem.find(".chart__bars");h.forEach(function(j){var a='<div class="bar__container" data-value="'+j+'" style="width:'+j+'%"><span class="bar"></span></div>';e.prepend(a)}),this.selectMax($(this)),this.selectMin($(this))},this.prependAxisY=function(h){var e=this.elem.find(".chart__axis-y");h.forEach(function(j){var a='<div class="chart__label-y"><span class="label-y__name">'+j+"</span></div>";e.prepend(a)})},this.prependAll=function(a){this.prependAxisX(a.axisX),this.prependAxisY(a.axisY),this.prependBars(a.bars)},this.appendItem=function(h,e){this.appendAxisY([h]),this.appendBars([e])},this.appendAxisX=function(k){var e=this.elem.find(".chart__axis-x");k.forEach(function(l){var a='<span class="chart__label-x">'+l+"</span>";e.append(a)});var j=e.find("span"),h=j.length;j.width(100/h+"%")},this.appendBars=function(h){var e=this.elem.find(".chart__bars");h.forEach(function(j){var a='<div class="bar__container" data-value="'+j+'" style="width:'+j+'%"><span class="bar"></span></div>';e.append(a)}),this.selectMax(),this.selectMin()},this.appendAxisY=function(h){var e=this.elem.find(".chart__axis-y");h.forEach(function(j){var a='<div class="chart__label-y"><span class="label-y__name">'+j+"</span></div>";e.append(a)})},this.appendAll=function(a){this.appendAxisX(a.axisX),this.appendAxisY(a.axisY),this.appendBars(a.bars)},this.resetBars=function(){this.elem.find(".chart__bars").empty()},this.resetAxisX=function(){this.elem.find(".chart__axis-x").empty()},this.resetAxisY=function(){this.elem.find(".chart__axis-y").empty()},this.resetAll=function(){this.resetAxisX(),this.resetAxisY(),this.resetBars()},this.updateBars=function(a){this.resetBars(),this.appendBars(a)},this.updateAxisX=function(a){this.resetAxisX(),this.appendAxisX(a)},this.updateAxisY=function(a){this.resetAxisY(),this.appendAxisY(a)},this.updateAll=function(a){this.resetAll(),this.appendBars(a.bars),this.appendAxisX(a.axisX),this.appendAxisY(a.axisY)},this.removeItem=function(j){var e=$charbox.find(".chart__label-y"),h=$charbox.find(".bar__container");h[j-1].remove(),e[j-1].remove()},this.sortByName=function(i){var h=c();if(h.barsLength){for(var j=h.barsLength;j>1;--j){for(var k=0;j-1>k;++k){h.axisY[k]>h.axisY[k+1]&&(d(h.bars,k,k+1),d(h.axisY,k,k+1))}}this.addSortedData(h,i)}else{console.error("Number of bars is not equals number of axis Y labels.")}},this.sortByValue=function(i){var h=c();if(h.barsLength){for(var j=h.barsLength;j>1;--j){for(var k=0;j-1>k;++k){h.bars[k]>h.bars[k+1]&&(d(h.bars,k,k+1),d(h.axisY,k,k+1))}}this.addSortedData(h,i,this)}else{console.error("Number of bars is not equals number of axis Y labels.")}},this.addSortedData=function(h,e){e&&(h.bars.reverse(),h.axisY.reverse()),this.resetBars(),this.appendBars(h.bars),this.resetAxisY(),this.appendAxisY(h.axisY)},this.selectMax=function(){var k=this.elem.find(".bar__container");k.removeClass("max");var e=k.map(function(){return $(this).data("value")}).get(),j=Math.max.apply(Math,e),h=k.filter('[data-value="'+j+'"]');h.addClass("max")},this.selectMin=function(){var k=this.elem.find(".bar__container");k.removeClass("min");var e=k.map(function(){return $(this).data("value")}).get(),j=Math.min.apply(Math,e),h=k.filter('[data-value="'+j+'"]');h.addClass("min")},this.runAnimation=function(){this.elem.removeClass("visible"),setTimeout(function(){this.elem.addClass("visible")},250)},this.init(this.options)};!function(c){var b={data:{},animation:!0,animationOffset:0,animationRepeat:!0,showValues:!0,showArrows:!1,showHorizontalLines:!1,labelsAboveBars:!1};c.fn.rumcaJS=function(d){if("object"==typeof d||!d){var a=c.extend({},b,d),f=new RumcaJS(a,this);return f}c.error("Method or option "+d+" does not exist on RumcaJS")}}(jQuery);